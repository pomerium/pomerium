// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.14.0
// source: device.proto

package device

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebAuthnOptions_AttestationConveyancePreference int32

const (
	WebAuthnOptions_NONE       WebAuthnOptions_AttestationConveyancePreference = 0
	WebAuthnOptions_INDIRECT   WebAuthnOptions_AttestationConveyancePreference = 1
	WebAuthnOptions_DIRECT     WebAuthnOptions_AttestationConveyancePreference = 2
	WebAuthnOptions_ENTERPRISE WebAuthnOptions_AttestationConveyancePreference = 3
)

// Enum value maps for WebAuthnOptions_AttestationConveyancePreference.
var (
	WebAuthnOptions_AttestationConveyancePreference_name = map[int32]string{
		0: "NONE",
		1: "INDIRECT",
		2: "DIRECT",
		3: "ENTERPRISE",
	}
	WebAuthnOptions_AttestationConveyancePreference_value = map[string]int32{
		"NONE":       0,
		"INDIRECT":   1,
		"DIRECT":     2,
		"ENTERPRISE": 3,
	}
)

func (x WebAuthnOptions_AttestationConveyancePreference) Enum() *WebAuthnOptions_AttestationConveyancePreference {
	p := new(WebAuthnOptions_AttestationConveyancePreference)
	*p = x
	return p
}

func (x WebAuthnOptions_AttestationConveyancePreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebAuthnOptions_AttestationConveyancePreference) Descriptor() protoreflect.EnumDescriptor {
	return file_device_proto_enumTypes[0].Descriptor()
}

func (WebAuthnOptions_AttestationConveyancePreference) Type() protoreflect.EnumType {
	return &file_device_proto_enumTypes[0]
}

func (x WebAuthnOptions_AttestationConveyancePreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebAuthnOptions_AttestationConveyancePreference.Descriptor instead.
func (WebAuthnOptions_AttestationConveyancePreference) EnumDescriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{0, 0}
}

type WebAuthnOptions_AuthenticatorAttachment int32

const (
	WebAuthnOptions_PLATFORM       WebAuthnOptions_AuthenticatorAttachment = 0
	WebAuthnOptions_CROSS_PLATFORM WebAuthnOptions_AuthenticatorAttachment = 2
)

// Enum value maps for WebAuthnOptions_AuthenticatorAttachment.
var (
	WebAuthnOptions_AuthenticatorAttachment_name = map[int32]string{
		0: "PLATFORM",
		2: "CROSS_PLATFORM",
	}
	WebAuthnOptions_AuthenticatorAttachment_value = map[string]int32{
		"PLATFORM":       0,
		"CROSS_PLATFORM": 2,
	}
)

func (x WebAuthnOptions_AuthenticatorAttachment) Enum() *WebAuthnOptions_AuthenticatorAttachment {
	p := new(WebAuthnOptions_AuthenticatorAttachment)
	*p = x
	return p
}

func (x WebAuthnOptions_AuthenticatorAttachment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebAuthnOptions_AuthenticatorAttachment) Descriptor() protoreflect.EnumDescriptor {
	return file_device_proto_enumTypes[1].Descriptor()
}

func (WebAuthnOptions_AuthenticatorAttachment) Type() protoreflect.EnumType {
	return &file_device_proto_enumTypes[1]
}

func (x WebAuthnOptions_AuthenticatorAttachment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebAuthnOptions_AuthenticatorAttachment.Descriptor instead.
func (WebAuthnOptions_AuthenticatorAttachment) EnumDescriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{0, 1}
}

type WebAuthnOptions_PublicKeyCredentialType int32

const (
	WebAuthnOptions_PUBLIC_KEY WebAuthnOptions_PublicKeyCredentialType = 0
)

// Enum value maps for WebAuthnOptions_PublicKeyCredentialType.
var (
	WebAuthnOptions_PublicKeyCredentialType_name = map[int32]string{
		0: "PUBLIC_KEY",
	}
	WebAuthnOptions_PublicKeyCredentialType_value = map[string]int32{
		"PUBLIC_KEY": 0,
	}
)

func (x WebAuthnOptions_PublicKeyCredentialType) Enum() *WebAuthnOptions_PublicKeyCredentialType {
	p := new(WebAuthnOptions_PublicKeyCredentialType)
	*p = x
	return p
}

func (x WebAuthnOptions_PublicKeyCredentialType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebAuthnOptions_PublicKeyCredentialType) Descriptor() protoreflect.EnumDescriptor {
	return file_device_proto_enumTypes[2].Descriptor()
}

func (WebAuthnOptions_PublicKeyCredentialType) Type() protoreflect.EnumType {
	return &file_device_proto_enumTypes[2]
}

func (x WebAuthnOptions_PublicKeyCredentialType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebAuthnOptions_PublicKeyCredentialType.Descriptor instead.
func (WebAuthnOptions_PublicKeyCredentialType) EnumDescriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{0, 2}
}

type WebAuthnOptions_ResidentKeyRequirement int32

const (
	WebAuthnOptions_RESIDENT_KEY_DISCOURAGED WebAuthnOptions_ResidentKeyRequirement = 0
	WebAuthnOptions_RESIDENT_KEY_PREFERRED   WebAuthnOptions_ResidentKeyRequirement = 1
	WebAuthnOptions_RESIDENT_KEY_REQUIRED    WebAuthnOptions_ResidentKeyRequirement = 2
)

// Enum value maps for WebAuthnOptions_ResidentKeyRequirement.
var (
	WebAuthnOptions_ResidentKeyRequirement_name = map[int32]string{
		0: "RESIDENT_KEY_DISCOURAGED",
		1: "RESIDENT_KEY_PREFERRED",
		2: "RESIDENT_KEY_REQUIRED",
	}
	WebAuthnOptions_ResidentKeyRequirement_value = map[string]int32{
		"RESIDENT_KEY_DISCOURAGED": 0,
		"RESIDENT_KEY_PREFERRED":   1,
		"RESIDENT_KEY_REQUIRED":    2,
	}
)

func (x WebAuthnOptions_ResidentKeyRequirement) Enum() *WebAuthnOptions_ResidentKeyRequirement {
	p := new(WebAuthnOptions_ResidentKeyRequirement)
	*p = x
	return p
}

func (x WebAuthnOptions_ResidentKeyRequirement) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebAuthnOptions_ResidentKeyRequirement) Descriptor() protoreflect.EnumDescriptor {
	return file_device_proto_enumTypes[3].Descriptor()
}

func (WebAuthnOptions_ResidentKeyRequirement) Type() protoreflect.EnumType {
	return &file_device_proto_enumTypes[3]
}

func (x WebAuthnOptions_ResidentKeyRequirement) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebAuthnOptions_ResidentKeyRequirement.Descriptor instead.
func (WebAuthnOptions_ResidentKeyRequirement) EnumDescriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{0, 3}
}

type WebAuthnOptions_UserVerificationRequirement int32

const (
	WebAuthnOptions_USER_VERIFICATION_DISCOURAGED WebAuthnOptions_UserVerificationRequirement = 0
	WebAuthnOptions_USER_VERIFICATION_PREFERRED   WebAuthnOptions_UserVerificationRequirement = 1
	WebAuthnOptions_USER_VERIFICATION_REQUIRED    WebAuthnOptions_UserVerificationRequirement = 2
)

// Enum value maps for WebAuthnOptions_UserVerificationRequirement.
var (
	WebAuthnOptions_UserVerificationRequirement_name = map[int32]string{
		0: "USER_VERIFICATION_DISCOURAGED",
		1: "USER_VERIFICATION_PREFERRED",
		2: "USER_VERIFICATION_REQUIRED",
	}
	WebAuthnOptions_UserVerificationRequirement_value = map[string]int32{
		"USER_VERIFICATION_DISCOURAGED": 0,
		"USER_VERIFICATION_PREFERRED":   1,
		"USER_VERIFICATION_REQUIRED":    2,
	}
)

func (x WebAuthnOptions_UserVerificationRequirement) Enum() *WebAuthnOptions_UserVerificationRequirement {
	p := new(WebAuthnOptions_UserVerificationRequirement)
	*p = x
	return p
}

func (x WebAuthnOptions_UserVerificationRequirement) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebAuthnOptions_UserVerificationRequirement) Descriptor() protoreflect.EnumDescriptor {
	return file_device_proto_enumTypes[4].Descriptor()
}

func (WebAuthnOptions_UserVerificationRequirement) Type() protoreflect.EnumType {
	return &file_device_proto_enumTypes[4]
}

func (x WebAuthnOptions_UserVerificationRequirement) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebAuthnOptions_UserVerificationRequirement.Descriptor instead.
func (WebAuthnOptions_UserVerificationRequirement) EnumDescriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{0, 4}
}

type WebAuthnOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attestation            *WebAuthnOptions_AttestationConveyancePreference `protobuf:"varint,1,opt,name=attestation,proto3,enum=pomerium.device.WebAuthnOptions_AttestationConveyancePreference,oneof" json:"attestation,omitempty"`
	AuthenticatorSelection *WebAuthnOptions_AuthenticatorSelectionCriteria  `protobuf:"bytes,2,opt,name=authenticator_selection,json=authenticatorSelection,proto3,oneof" json:"authenticator_selection,omitempty"`
	PubKeyCredParams       []*WebAuthnOptions_PublicKeyCredentialParameters `protobuf:"bytes,3,rep,name=pub_key_cred_params,json=pubKeyCredParams,proto3" json:"pub_key_cred_params,omitempty"`
}

func (x *WebAuthnOptions) Reset() {
	*x = WebAuthnOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAuthnOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAuthnOptions) ProtoMessage() {}

func (x *WebAuthnOptions) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAuthnOptions.ProtoReflect.Descriptor instead.
func (*WebAuthnOptions) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{0}
}

func (x *WebAuthnOptions) GetAttestation() WebAuthnOptions_AttestationConveyancePreference {
	if x != nil && x.Attestation != nil {
		return *x.Attestation
	}
	return WebAuthnOptions_NONE
}

func (x *WebAuthnOptions) GetAuthenticatorSelection() *WebAuthnOptions_AuthenticatorSelectionCriteria {
	if x != nil {
		return x.AuthenticatorSelection
	}
	return nil
}

func (x *WebAuthnOptions) GetPubKeyCredParams() []*WebAuthnOptions_PublicKeyCredentialParameters {
	if x != nil {
		return x.PubKeyCredParams
	}
	return nil
}

// A Type constrains which kinds of devices are allowed to be registered.
type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Specifier:
	//	*Type_Webauthn
	Specifier isType_Specifier `protobuf_oneof:"specifier"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{1}
}

func (x *Type) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Type) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Type) GetSpecifier() isType_Specifier {
	if m != nil {
		return m.Specifier
	}
	return nil
}

func (x *Type) GetWebauthn() *Type_WebAuthn {
	if x, ok := x.GetSpecifier().(*Type_Webauthn); ok {
		return x.Webauthn
	}
	return nil
}

type isType_Specifier interface {
	isType_Specifier()
}

type Type_Webauthn struct {
	Webauthn *Type_WebAuthn `protobuf:"bytes,3,opt,name=webauthn,proto3,oneof"`
}

func (*Type_Webauthn) isType_Specifier() {}

// An Enrollment is used to approve a user's device.
type Enrollment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId       string                 `protobuf:"bytes,7,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	CredentialId string                 `protobuf:"bytes,8,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
	UserId       string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ApprovedBy   string                 `protobuf:"bytes,3,opt,name=approved_by,json=approvedBy,proto3" json:"approved_by,omitempty"`
	EnrolledAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=enrolled_at,json=enrolledAt,proto3" json:"enrolled_at,omitempty"`
	UserAgent    string                 `protobuf:"bytes,5,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	IpAddress    string                 `protobuf:"bytes,6,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
}

func (x *Enrollment) Reset() {
	*x = Enrollment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enrollment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enrollment) ProtoMessage() {}

func (x *Enrollment) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enrollment.ProtoReflect.Descriptor instead.
func (*Enrollment) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{2}
}

func (x *Enrollment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Enrollment) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *Enrollment) GetCredentialId() string {
	if x != nil {
		return x.CredentialId
	}
	return ""
}

func (x *Enrollment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Enrollment) GetApprovedBy() string {
	if x != nil {
		return x.ApprovedBy
	}
	return ""
}

func (x *Enrollment) GetEnrolledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EnrolledAt
	}
	return nil
}

func (x *Enrollment) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *Enrollment) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

// A Credential is a user's device-specific credential.
type Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId       string `protobuf:"bytes,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	EnrollmentId string `protobuf:"bytes,3,opt,name=enrollment_id,json=enrollmentId,proto3" json:"enrollment_id,omitempty"`
	UserId       string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Types that are assignable to Specifier:
	//	*Credential_Webauthn
	Specifier isCredential_Specifier `protobuf_oneof:"specifier"`
}

func (x *Credential) Reset() {
	*x = Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{3}
}

func (x *Credential) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Credential) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *Credential) GetEnrollmentId() string {
	if x != nil {
		return x.EnrollmentId
	}
	return ""
}

func (x *Credential) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (m *Credential) GetSpecifier() isCredential_Specifier {
	if m != nil {
		return m.Specifier
	}
	return nil
}

func (x *Credential) GetWebauthn() *Credential_WebAuthn {
	if x, ok := x.GetSpecifier().(*Credential_Webauthn); ok {
		return x.Webauthn
	}
	return nil
}

type isCredential_Specifier interface {
	isCredential_Specifier()
}

type Credential_Webauthn struct {
	Webauthn *Credential_WebAuthn `protobuf:"bytes,5,opt,name=webauthn,proto3,oneof"`
}

func (*Credential_Webauthn) isCredential_Specifier() {}

// An OwnerCredentialRecord is used to track credential owners to prevent credential re-use.
type OwnerCredentialRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId   []byte `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	PublicKey []byte `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *OwnerCredentialRecord) Reset() {
	*x = OwnerCredentialRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerCredentialRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerCredentialRecord) ProtoMessage() {}

func (x *OwnerCredentialRecord) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerCredentialRecord.ProtoReflect.Descriptor instead.
func (*OwnerCredentialRecord) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{4}
}

func (x *OwnerCredentialRecord) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *OwnerCredentialRecord) GetOwnerId() []byte {
	if x != nil {
		return x.OwnerId
	}
	return nil
}

func (x *OwnerCredentialRecord) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type WebAuthnOptions_AuthenticatorSelectionCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthenticatorAttachment *WebAuthnOptions_AuthenticatorAttachment     `protobuf:"varint,1,opt,name=authenticator_attachment,json=authenticatorAttachment,proto3,enum=pomerium.device.WebAuthnOptions_AuthenticatorAttachment,oneof" json:"authenticator_attachment,omitempty"`
	RequireResidentKey      *bool                                        `protobuf:"varint,2,opt,name=require_resident_key,json=requireResidentKey,proto3,oneof" json:"require_resident_key,omitempty"`
	ResidentKeyRequirement  *WebAuthnOptions_ResidentKeyRequirement      `protobuf:"varint,3,opt,name=resident_key_requirement,json=residentKeyRequirement,proto3,enum=pomerium.device.WebAuthnOptions_ResidentKeyRequirement,oneof" json:"resident_key_requirement,omitempty"`
	UserVerification        *WebAuthnOptions_UserVerificationRequirement `protobuf:"varint,4,opt,name=user_verification,json=userVerification,proto3,enum=pomerium.device.WebAuthnOptions_UserVerificationRequirement,oneof" json:"user_verification,omitempty"`
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) Reset() {
	*x = WebAuthnOptions_AuthenticatorSelectionCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAuthnOptions_AuthenticatorSelectionCriteria) ProtoMessage() {}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAuthnOptions_AuthenticatorSelectionCriteria.ProtoReflect.Descriptor instead.
func (*WebAuthnOptions_AuthenticatorSelectionCriteria) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{0, 0}
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) GetAuthenticatorAttachment() WebAuthnOptions_AuthenticatorAttachment {
	if x != nil && x.AuthenticatorAttachment != nil {
		return *x.AuthenticatorAttachment
	}
	return WebAuthnOptions_PLATFORM
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) GetRequireResidentKey() bool {
	if x != nil && x.RequireResidentKey != nil {
		return *x.RequireResidentKey
	}
	return false
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) GetResidentKeyRequirement() WebAuthnOptions_ResidentKeyRequirement {
	if x != nil && x.ResidentKeyRequirement != nil {
		return *x.ResidentKeyRequirement
	}
	return WebAuthnOptions_RESIDENT_KEY_DISCOURAGED
}

func (x *WebAuthnOptions_AuthenticatorSelectionCriteria) GetUserVerification() WebAuthnOptions_UserVerificationRequirement {
	if x != nil && x.UserVerification != nil {
		return *x.UserVerification
	}
	return WebAuthnOptions_USER_VERIFICATION_DISCOURAGED
}

type WebAuthnOptions_PublicKeyCredentialParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alg  int64                                   `protobuf:"varint,1,opt,name=alg,proto3" json:"alg,omitempty"`
	Type WebAuthnOptions_PublicKeyCredentialType `protobuf:"varint,2,opt,name=type,proto3,enum=pomerium.device.WebAuthnOptions_PublicKeyCredentialType" json:"type,omitempty"`
}

func (x *WebAuthnOptions_PublicKeyCredentialParameters) Reset() {
	*x = WebAuthnOptions_PublicKeyCredentialParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebAuthnOptions_PublicKeyCredentialParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebAuthnOptions_PublicKeyCredentialParameters) ProtoMessage() {}

func (x *WebAuthnOptions_PublicKeyCredentialParameters) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebAuthnOptions_PublicKeyCredentialParameters.ProtoReflect.Descriptor instead.
func (*WebAuthnOptions_PublicKeyCredentialParameters) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{0, 1}
}

func (x *WebAuthnOptions_PublicKeyCredentialParameters) GetAlg() int64 {
	if x != nil {
		return x.Alg
	}
	return 0
}

func (x *WebAuthnOptions_PublicKeyCredentialParameters) GetType() WebAuthnOptions_PublicKeyCredentialType {
	if x != nil {
		return x.Type
	}
	return WebAuthnOptions_PUBLIC_KEY
}

type Type_WebAuthn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *WebAuthnOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *Type_WebAuthn) Reset() {
	*x = Type_WebAuthn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type_WebAuthn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type_WebAuthn) ProtoMessage() {}

func (x *Type_WebAuthn) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type_WebAuthn.ProtoReflect.Descriptor instead.
func (*Type_WebAuthn) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Type_WebAuthn) GetOptions() *WebAuthnOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type Credential_WebAuthn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PublicKey []byte `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// the options that were used to do initial registration
	RegisterOptions []byte `protobuf:"bytes,3,opt,name=register_options,json=registerOptions,proto3" json:"register_options,omitempty"`
	// the response returned from initial registration
	RegisterResponse []byte `protobuf:"bytes,4,opt,name=register_response,json=registerResponse,proto3" json:"register_response,omitempty"`
	// subsequent authenticate responses
	AuthenticateResponse [][]byte `protobuf:"bytes,5,rep,name=authenticate_response,json=authenticateResponse,proto3" json:"authenticate_response,omitempty"`
}

func (x *Credential_WebAuthn) Reset() {
	*x = Credential_WebAuthn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential_WebAuthn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential_WebAuthn) ProtoMessage() {}

func (x *Credential_WebAuthn) ProtoReflect() protoreflect.Message {
	mi := &file_device_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential_WebAuthn.ProtoReflect.Descriptor instead.
func (*Credential_WebAuthn) Descriptor() ([]byte, []int) {
	return file_device_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Credential_WebAuthn) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Credential_WebAuthn) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Credential_WebAuthn) GetRegisterOptions() []byte {
	if x != nil {
		return x.RegisterOptions
	}
	return nil
}

func (x *Credential_WebAuthn) GetRegisterResponse() []byte {
	if x != nil {
		return x.RegisterResponse
	}
	return nil
}

func (x *Credential_WebAuthn) GetAuthenticateResponse() [][]byte {
	if x != nil {
		return x.AuthenticateResponse
	}
	return nil
}

var File_device_proto protoreflect.FileDescriptor

var file_device_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xec, 0x0b, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x67, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x70, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x41,
	0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x79, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x7d, 0x0a,
	0x17, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x48,
	0x01, 0x52, 0x16, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x6d, 0x0a, 0x13,
	0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x41,
	0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x10, 0x70, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x43, 0x72, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0xa2, 0x04, 0x0a, 0x1e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x78,
	0x0a, 0x18, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x38, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x17, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x76, 0x0a, 0x18, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x37, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x02, 0x52, 0x16, 0x72, 0x65,
	0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x6e, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x48, 0x03, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x1b, 0x0a,
	0x19, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x7f, 0x0a, 0x1d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x61, 0x6c, 0x67, 0x12, 0x4c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x38, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x55, 0x0a, 0x1f, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x79, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x49, 0x4e, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x54, 0x45,
	0x52, 0x50, 0x52, 0x49, 0x53, 0x45, 0x10, 0x03, 0x22, 0x3b, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x52, 0x4f, 0x53, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46,
	0x4f, 0x52, 0x4d, 0x10, 0x02, 0x22, 0x29, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x00,
	0x22, 0x6d, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45,
	0x53, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f,
	0x55, 0x52, 0x41, 0x47, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x49,
	0x44, 0x45, 0x4e, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x52,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x54,
	0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x02, 0x22,
	0x81, 0x01, 0x0a, 0x1b, 0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x1d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x52, 0x41, 0x47, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x52, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x02, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xbd, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x08,
	0x77, 0x65, 0x62, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x48, 0x00,
	0x52, 0x08, 0x77, 0x65, 0x62, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x1a, 0x46, 0x0a, 0x08, 0x57, 0x65,
	0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x12, 0x3a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69,
	0x75, 0x6d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74,
	0x68, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22,
	0x8f, 0x02, 0x0a, 0x0a, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x8d, 0x03, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x61, 0x75,
	0x74, 0x68, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x48,
	0x00, 0x52, 0x08, 0x77, 0x65, 0x62, 0x61, 0x75, 0x74, 0x68, 0x6e, 0x1a, 0xc6, 0x01, 0x0a, 0x08,
	0x57, 0x65, 0x62, 0x41, 0x75, 0x74, 0x68, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x14,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x22, 0x61, 0x0a, 0x15, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6d, 0x65, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x70, 0x6f, 0x6d, 0x65,
	0x72, 0x69, 0x75, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_device_proto_rawDescOnce sync.Once
	file_device_proto_rawDescData = file_device_proto_rawDesc
)

func file_device_proto_rawDescGZIP() []byte {
	file_device_proto_rawDescOnce.Do(func() {
		file_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_device_proto_rawDescData)
	})
	return file_device_proto_rawDescData
}

var file_device_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_device_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_device_proto_goTypes = []interface{}{
	(WebAuthnOptions_AttestationConveyancePreference)(0),   // 0: pomerium.device.WebAuthnOptions.AttestationConveyancePreference
	(WebAuthnOptions_AuthenticatorAttachment)(0),           // 1: pomerium.device.WebAuthnOptions.AuthenticatorAttachment
	(WebAuthnOptions_PublicKeyCredentialType)(0),           // 2: pomerium.device.WebAuthnOptions.PublicKeyCredentialType
	(WebAuthnOptions_ResidentKeyRequirement)(0),            // 3: pomerium.device.WebAuthnOptions.ResidentKeyRequirement
	(WebAuthnOptions_UserVerificationRequirement)(0),       // 4: pomerium.device.WebAuthnOptions.UserVerificationRequirement
	(*WebAuthnOptions)(nil),                                // 5: pomerium.device.WebAuthnOptions
	(*Type)(nil),                                           // 6: pomerium.device.Type
	(*Enrollment)(nil),                                     // 7: pomerium.device.Enrollment
	(*Credential)(nil),                                     // 8: pomerium.device.Credential
	(*OwnerCredentialRecord)(nil),                          // 9: pomerium.device.OwnerCredentialRecord
	(*WebAuthnOptions_AuthenticatorSelectionCriteria)(nil), // 10: pomerium.device.WebAuthnOptions.AuthenticatorSelectionCriteria
	(*WebAuthnOptions_PublicKeyCredentialParameters)(nil),  // 11: pomerium.device.WebAuthnOptions.PublicKeyCredentialParameters
	(*Type_WebAuthn)(nil),                                  // 12: pomerium.device.Type.WebAuthn
	(*Credential_WebAuthn)(nil),                            // 13: pomerium.device.Credential.WebAuthn
	(*timestamppb.Timestamp)(nil),                          // 14: google.protobuf.Timestamp
}
var file_device_proto_depIdxs = []int32{
	0,  // 0: pomerium.device.WebAuthnOptions.attestation:type_name -> pomerium.device.WebAuthnOptions.AttestationConveyancePreference
	10, // 1: pomerium.device.WebAuthnOptions.authenticator_selection:type_name -> pomerium.device.WebAuthnOptions.AuthenticatorSelectionCriteria
	11, // 2: pomerium.device.WebAuthnOptions.pub_key_cred_params:type_name -> pomerium.device.WebAuthnOptions.PublicKeyCredentialParameters
	12, // 3: pomerium.device.Type.webauthn:type_name -> pomerium.device.Type.WebAuthn
	14, // 4: pomerium.device.Enrollment.enrolled_at:type_name -> google.protobuf.Timestamp
	13, // 5: pomerium.device.Credential.webauthn:type_name -> pomerium.device.Credential.WebAuthn
	1,  // 6: pomerium.device.WebAuthnOptions.AuthenticatorSelectionCriteria.authenticator_attachment:type_name -> pomerium.device.WebAuthnOptions.AuthenticatorAttachment
	3,  // 7: pomerium.device.WebAuthnOptions.AuthenticatorSelectionCriteria.resident_key_requirement:type_name -> pomerium.device.WebAuthnOptions.ResidentKeyRequirement
	4,  // 8: pomerium.device.WebAuthnOptions.AuthenticatorSelectionCriteria.user_verification:type_name -> pomerium.device.WebAuthnOptions.UserVerificationRequirement
	2,  // 9: pomerium.device.WebAuthnOptions.PublicKeyCredentialParameters.type:type_name -> pomerium.device.WebAuthnOptions.PublicKeyCredentialType
	5,  // 10: pomerium.device.Type.WebAuthn.options:type_name -> pomerium.device.WebAuthnOptions
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_device_proto_init() }
func file_device_proto_init() {
	if File_device_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAuthnOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enrollment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerCredentialRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAuthnOptions_AuthenticatorSelectionCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebAuthnOptions_PublicKeyCredentialParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type_WebAuthn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential_WebAuthn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_device_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_device_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Type_Webauthn)(nil),
	}
	file_device_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Credential_Webauthn)(nil),
	}
	file_device_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_device_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_device_proto_goTypes,
		DependencyIndexes: file_device_proto_depIdxs,
		EnumInfos:         file_device_proto_enumTypes,
		MessageInfos:      file_device_proto_msgTypes,
	}.Build()
	File_device_proto = out.File
	file_device_proto_rawDesc = nil
	file_device_proto_goTypes = nil
	file_device_proto_depIdxs = nil
}
