on:
  push:
    branches:
      - master
  pull_request:

name: Test
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Lint Dependencies
        run: make build-deps
      - name: Lint
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          make lint
      - name: Spellcheck
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          make spellcheck
  test:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest, macos-latest, ubuntu-16.04]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build dependencies
        run: make build-deps
      - name: Test
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          make test

  cover:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: make cover
      - name: CodeCov
        uses: codecov/codecov-action@v1.0.4
        with:
          # The token below is used exclusively for uploading coverage reports.
          token: "d82eb1d7-5990-4a31-baa4-156473402105"
          file: ./coverage.txt

  build:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest, macos-latest, ubuntu-16.04]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: |
          make build-deps
          make build

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: build
        run: docker build .

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: install mkcert
        run: |
          #!/bin/bash
          if [ ! -f mkcert ]; then
            echo "downloading mkcert"
            sudo curl -Lo mkcert https://github.com/FiloSottile/mkcert/releases/download/v1.4.1/mkcert-v1.4.1-linux-amd64
            sudo chmod +x mkcert
          fi
          sudo install mkcert /usr/local/bin/

      - name: Create kind cluster
        uses: helm/kind-action@v1.0.0-rc.1
        with:
          cluster_name: kind

      - name: install go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.x

      - name: checkout code
        uses: actions/checkout@v2

      - name: build dev docker image
        run: |
          ./scripts/build-dev-docker.bash

      - name: test
        run: go test -v ./integration/...

  storage-backend-test-redis:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: install go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.x

      - name: checkout code
        uses: actions/checkout@v2

      - name: test
        run: go test -v -tags redis ./pkg/storage/redis/...
