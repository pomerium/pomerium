name: Test
permissions:
  contents: read
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.19.x]
        node-version: [16.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: ${{ matrix.node-version }}

      - name: set env vars
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0

      - name: cache go binaries
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        id: cache-go-bin
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-${{ hashFiles('**/go.mod') }}
          restore-keys: ${{ runner.os }}-go-bin

      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - run: make deps-build
      - name: Lint
        if: runner.os == 'Linux'
        run: make lint
      - name: test
        run: make test

  cover:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.19.x]
        node-version: [16.x]
    steps:
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0

      - name: set env vars
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: cache go binaries
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        id: cache-go-bin
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-${{ hashFiles('**/go.mod') }}
          restore-keys: ${{ runner.os }}-go-bin

      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: cover
        run: make cover

      - uses: jandelgado/gcov2lcov-action@c680c0f7c7442485f1749eb2a13e54a686e76eb5
        name: convert coverage to lcov
        with:
          infile: coverage.txt
          outfile: coverage.lcov

      - name: upload to coveralls
        uses: coverallsapp/github-action@9ba913c152ae4be1327bfb9085dc806cedb44057
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

  integration:
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.19.x]
        node-version: [16.x]
        platform: [ubuntu-latest]
        deployment: [kubernetes, multi, nginx, single, traefik]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: ${{ matrix.node-version }}

      - name: set env vars
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0
      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        with:
          path: |
            ~/go/pkg
            ~/.cache/go-build
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: build dev docker image
        run: |
          ./scripts/build-dev-docker.bash

      - name: start cluster
        run: |
          export POMERIUM_TAG=dev
          cd ./integration/clusters/${{matrix.deployment}}
          docker-compose up -d

      - name: integration tests
        run: |
          (cd ./integration/clusters/${{matrix.deployment}} && docker-compose logs -f &)
          go test -v ./integration/...

  build:
    strategy:
      matrix:
        go-version: [1.19.x]
        node-version: [16.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0
      - uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: build
        run: |
          make build-deps
          make build

      - name: save binary
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
        with:
          path: bin/pomerium*
          name: pomerium ${{ github.run_id }} ${{ matrix.platform }}
          retention-days: 1

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325

      - name: Docker Build
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          context: .
          file: ./Dockerfile
          push: false

  precommit:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          fetch-depth: 0
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f
        with:
          go-version: 1.19.x
      - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984
        with:
          python-version: "3.x"
      - uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507
        with:
          extra_args: --show-diff-on-failure --from-ref ${{
            github.event.pull_request.base.sha }} --to-ref ${{
            github.event.pull_request.head.sha }}
        env:
          SKIP: lint

  license:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.19.x]
        platform: [ubuntu-latest]
    needs:
      - build
    steps:
      - uses: actions/setup-go@c4a742cab115ed795e34d4513e2cf7d472deb55f
        with:
          go-version: 1.19.x

      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: retrieve binary
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
        with:
          name: pomerium ${{ github.run_id }} ${{ matrix.platform }}
          path: bin/

      - name: download envoy
        run: make get-envoy

      - name: FOSSA Scan
        uses: fossa-contrib/fossa-action@6cffaa064112e1cf9b5798c6224f9487dc1ec316
        with:
          fossa-api-key: 18f4ef488f514d06874b75f5809cea93
