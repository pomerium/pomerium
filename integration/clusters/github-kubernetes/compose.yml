services:
  k3s-agent:
    environment:
      K3S_TOKEN: TOKEN
      K3S_URL: https://k3s-server:6443
    image: rancher/k3s:${K3S_TAG:-latest}
    privileged: true
    restart: always
    tmpfs:
    - /run
    - /var/run
    ulimits:
      nofile:
        hard: 65535
        soft: 65535
      nproc: 65535
  k3s-init:
    depends_on:
      k3s-server:
        condition: service_healthy
    entrypoint:
    - sh
    - -c
    - |
      cat /k3s-config/kubeconfig.yaml | sed s/127.0.0.1/k3s-server/g >/tmp/kubeconfig.yaml
      export KUBECONFIG=/tmp/kubeconfig.yaml
      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "v1",
        "kind": "Service",
        "metadata": {
          "labels": {
            "app": "httpdetails"
          },
          "name": "httpdetails",
          "namespace": "default"
        },
        "spec": {
          "ports": [
            {
              "name": "http",
              "port": 8024,
              "targetPort": "http"
            }
          ],
          "selector": {
            "app": "httpdetails"
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "metadata": {
          "name": "httpdetails",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app": "httpdetails"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "app": "httpdetails"
              }
            },
            "spec": {
              "containers": [
                {
                  "args": [
                    "sh",
                    "-c",
                    "echo \"$$CERT\" >/app/fullchain.pem\necho \"$$KEY\" >/app/privkey.pem\nnode ./index.js\n"
                  ],
                  "image": "mendhak/http-https-echo:19",
                  "name": "httpdetails",
                  "ports": [
                    {
                      "containerPort": 8024,
                      "name": "http"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "v1",
        "kind": "Service",
        "metadata": {
          "labels": {
            "app": "mock-idp"
          },
          "name": "mock-idp",
          "namespace": "default"
        },
        "spec": {
          "ports": [
            {
              "name": "http",
              "port": 8024,
              "targetPort": "http"
            }
          ],
          "selector": {
            "app": "mock-idp"
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "metadata": {
          "name": "mock-idp",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app": "mock-idp"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "app": "mock-idp"
              }
            },
            "spec": {
              "containers": [
                {
                  "args": [
                    "--provider",
                    "github",
                    "--port",
                    "8024",
                    "--root-url",
                    "https://mock-idp.localhost.pomerium.io"
                  ],
                  "image": "calebdoxsey/mock-idps:${MOCK_IDPS_TAG:-master}",
                  "name": "mock-idp",
                  "ports": [
                    {
                      "containerPort": 8024,
                      "name": "http"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "v1",
        "kind": "Service",
        "metadata": {
          "labels": {
            "app": "pomerium"
          },
          "name": "pomerium",
          "namespace": "default"
        },
        "spec": {
          "ports": [
            {
              "name": "http",
              "nodePort": 80,
              "port": 80,
              "targetPort": "http"
            },
            {
              "name": "https",
              "nodePort": 443,
              "port": 443,
              "targetPort": "https"
            },
            {
              "name": "grpc",
              "nodePort": 5443,
              "port": 5443,
              "targetPort": "grpc"
            }
          ],
          "selector": {
            "app": "pomerium"
          },
          "type": "NodePort"
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "metadata": {
          "name": "pomerium",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app": "pomerium"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "app": "pomerium"
              }
            },
            "spec": {
              "containers": [
                {
                  "env": [
                    {
                      "name": "AUTHENTICATE_SERVICE_URL",
                      "value": "https://authenticate.localhost.pomerium.io"
                    },
                    {
                      "name": "CERTIFICATE",
                      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVVakNDQXJxZ0F3SUJBZ0lSQUtOYUVxQ21tWmZobWNZZ1p5MDFXQ3N3RFFZSktvWklodmNOQVFFTEJRQXcKZ1lNeEhqQWNCZ05WQkFvVEZXMXJZMlZ5ZENCa1pYWmxiRzl3YldWdWRDQkRRVEVzTUNvR0ExVUVDd3dqWTJGcwpaV0pBWTJGc1pXSXRjR010YkdsdWRYZ2dLRU5oYkdWaUlFUnZlSE5sZVNreE16QXhCZ05WQkFNTUttMXJZMlZ5CmRDQmpZV3hsWWtCallXeGxZaTF3WXkxc2FXNTFlQ0FvUTJGc1pXSWdSRzk0YzJWNUtUQWVGdzB5TVRBNE1UQXgKTnpNeU1UQmFGdzB5TXpFeE1UQXhPRE15TVRCYU1GY3hKekFsQmdOVkJBb1RIbTFyWTJWeWRDQmtaWFpsYkc5dwpiV1Z1ZENCalpYSjBhV1pwWTJGMFpURXNNQ29HQTFVRUN3d2pZMkZzWldKQVkyRnNaV0l0Y0dNdGJHbHVkWGdnCktFTmhiR1ZpSUVSdmVITmxlU2t3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzgKSExCQUl6WGtQZWVnbGRVZlJLSzJqUXhTVlpENWcrcXNqQXpwbXJxL0F0bXdlSzFjR2NPdFo2ZU9MK3A4YnJQRAp5VmhEVDBRbEkvTy9FS2dDT0ZGeFVEcW9SODJpWTA2U2FjQWpIbmk2K1BPOXRWUmJGVjB3MTRCREFKU3BCK1Z2Cld5bCtGb1BEVi92c1ozMUZ0WXcrRXdxa2JEeC9rYVQ5dXpmK0xKZGxrZjE0blFRajhFa3kvOGQzbVdKYmIvOXQKak9ic2FRZ0o1TEx4Q1lkSW1rcjc3WDJMTXVEdy8xdHBINjQyR0UyNU5yZ202UUhseUtTZllYbzM4djgzZWJFcQpiWlVERytaaW9BclBtcW1rYXdVV3czZWtoajgwU0pnL1RLOVBSYU4vVnZjSTFQZ0FkN0xaenRVUmVTbVR5NWhkCjlyNnJPQnhweHduVER2SGtCbjZ2QWdNQkFBR2piREJxTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUUKRERBS0JnZ3JCZ0VGQlFjREFUQWZCZ05WSFNNRUdEQVdnQlNGaGxoWWdFZktUcGxWT2VuZVZHMyszSUUvVFRBaQpCZ05WSFJFRUd6QVpnaGNxTG14dlkyRnNhRzl6ZEM1d2IyMWxjbWwxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBWUVBdWZRQUY3OXM3YzFnbVo5Q0lLQlNHa0hoK1NIMDFDdUtZbm5IaU1vd0hzVGlvRmFVQVFzZC9QNFgKYzJYQnFjMzRlVDNtQ3ZwZ1pqSGJqejZKbG5UWUp4dUx2VnFuVkIzZW10V3JiMWNRdmg4QnBoeHNwVGxTOHVpRQpBRWYvbmd0cHpmQS9mNGxwR2t6clEwY3lQa0VKR3o1MTFxOTdpdHpuOVJaWnpWVFp4TlZGU1AydlZoTk5RVnNXCk94YWtjdllSZ256OEFPUVMzT1BIajJGUWMzaWlic2hjdDVsZUl3WVpGY3hJTkdIUjZLTDYrL0xTZVBOQ0VNbUsKcXltVlBrUUdzSWNVNkdROWZ4YVN1NG1wK0lVQUxQcm9pekVWSThTVms1bk9tM0hJZXorWmZYaHpmbkd4MDZTSQo2TnVvUVFQcVVCZVplWG4yWUZZaGlwZVJkclF4dkEzNi9ZWGEvQWtYQ2VVMHBYeGJ0WEtjdmF0ZnJpNUtuWUpECmtINTlhK2FGa1RzbDQxdGZJMmNuUllWZGRxWFZsM096TGJjZ0FGTG4xV2VDMXh4M3hSWGk3S2xkb2tPbHZndisKQjZuYVdmQ3hSbFdaL2xzbUhhZTRrYzFXSDRLYzduSytJVGI0MEVralY2OC9BN2tyWnNOMVZjcU50cG9tWWtnRQp4alVFOFhVdQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
                    },
                    {
                      "name": "CERTIFICATE_AUTHORITY",
                      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUUxekNDQXorZ0F3SUJBZ0lRWjEzOWNkL3BhUGRrUzJKeUF1N2tFREFOQmdrcWhraUc5dzBCQVFzRkFEQ0IKZ3pFZU1Cd0dBMVVFQ2hNVmJXdGpaWEowSUdSbGRtVnNiM0J0Wlc1MElFTkJNU3d3S2dZRFZRUUxEQ05qWVd4bApZa0JqWVd4bFlpMXdZeTFzYVc1MWVDQW9RMkZzWldJZ1JHOTRjMlY1S1RFek1ERUdBMVVFQXd3cWJXdGpaWEowCklHTmhiR1ZpUUdOaGJHVmlMWEJqTFd4cGJuVjRJQ2hEWVd4bFlpQkViM2h6WlhrcE1CNFhEVEl4TURneE1ERTMKTXpJd09Wb1hEVE14TURneE1ERTNNekl3T1Zvd2dZTXhIakFjQmdOVkJBb1RGVzFyWTJWeWRDQmtaWFpsYkc5dwpiV1Z1ZENCRFFURXNNQ29HQTFVRUN3d2pZMkZzWldKQVkyRnNaV0l0Y0dNdGJHbHVkWGdnS0VOaGJHVmlJRVJ2CmVITmxlU2t4TXpBeEJnTlZCQU1NS20xclkyVnlkQ0JqWVd4bFlrQmpZV3hsWWkxd1l5MXNhVzUxZUNBb1EyRnMKWldJZ1JHOTRjMlY1S1RDQ0FhSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnR1BBRENDQVlvQ2dnR0JBTmJLeU16NQpNVlc2WUtkamgxb0lOMU1uN1BFMnBINVNiSlNwV3hkQUdoZEJrQmtwQWE3T3hhcmpINUtWa0NUU2E3b25jbGE3CnFOdUpaUzZtQm1veEYrUitjUjNqeUdkVUFZbG96bDFqbGZxTElmQy8rZzdWN1ZtT0puOTh0akI0MmZhdHhMbDYKV1BBdzFKRE5zV3RRZmhLaGJjSHV0N1JzRjByTU9PSGN3eXdUUjdMT3lDbUllbDFwY21wVjRoYlZjVDZlVndvUApIWHlKU2E5Y3FhTVE1WHJkb2dhaTRJcVpaSUdMSGVMc1RWdXRPZ0pGWEVldmxYL1FUM3NXb21FY3R6aDM4SnM0CjlEaUFQRDZkNFk3L0NQTFlFZmsyOUpROU5aaHBnRHNpOWh1NUZISFpjWHdmMUlIbHcvQ0JWZ242aitqbXZLS3oKOTBNYTFvcXV2M1c2ZHR0aWQveENjTEd1MlMrOTZUenJ5a21veTVWYWNMdFZFUDQxWW1vVmxzOTFybG83b2xwZQpRV0Zibm1jbzczOVRJLzRoK0hvZG9scGVyUUVSUWw3dUNucEtWUFozV29rS3VSaDVwa3FrUXAvYXJRanR3Y1J0Ckc0M0NyRHBibCt1U2pNQ0F4aGE5NThlVFl2dG9qVE1udkx0c0dJRDFoR1hucWx3KzVLaktyZ1JIclFJREFRQUIKbzBVd1F6QU9CZ05WSFE4QkFmOEVCQU1DQWdRd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFEQWRCZ05WSFE0RQpGZ1FVaFlaWVdJQkh5azZaVlRucDNsUnQvdHlCUDAwd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dHQkFBMUYvYXByCmw2cE5UM01wL014aFVVZ282dXNFSkNyeUdRY0xSZmV4eVFYR04zaHVDbUlyUDU1VkZhOEVUUEF0anNyNlBNZTcKN3Z2RWo4ZUZ1Mkp0S292bFF3TmV3WVU5Y2pBTUNWYUZpTmJyUWEyMGh6aFdjMmpzNmR5aWxkRTYvRFB6YmVkcwpLREF4aEZOcDM1U2x3dFJ0S2sxU3p4SnhzcVN3amZ4SThmcCtSLzB3TzhnMGZXVGRNMmdDcFJ3WU1Od0pFTEVnCitkU2x2SkN3dXUrcnp4TGFsemFQRjFQTVRXNzJPRUxhbC9qNXNEKzJWeXRRNGsrSFVEYnl0MkRuUVQ3WVEzem8KcTAyeDJ1MnNtMVdXL28vdWg4cGpQeGtHUXFMMm1yeVpzNlZIOVZDVTNRa0tORHNzTmQ3MWxyM3dQb0U0WVJIZQpVdnpEMWVEZWVsekJVRk5JcERDamRDc0w1NXlJUHFVc3I2bG1qcEJQTDB2ZWEzM1FUTWJjc1N4dTB1bUdYRGJVCjY2anVVNFoxak9FMHdDbEl2YU82OTlKK0UyZ0JlMWpVTjZBdDZiOEJTb1pxQ3FYWW9ESEdlaTlSQlVkdmdxdG8Ka1Zzb0pmREkvVEZNZWtZZ3BMNVVWWW1MZGZncUxQUFJQOXBRQkxEeDNtc3plQXFudmZUSUNBemZYZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                    },
                    {
                      "name": "CERTIFICATE_KEY",
                      "value": "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQzhITEJBSXpYa1BlZWcKbGRVZlJLSzJqUXhTVlpENWcrcXNqQXpwbXJxL0F0bXdlSzFjR2NPdFo2ZU9MK3A4YnJQRHlWaERUMFFsSS9PLwpFS2dDT0ZGeFVEcW9SODJpWTA2U2FjQWpIbmk2K1BPOXRWUmJGVjB3MTRCREFKU3BCK1Z2V3lsK0ZvUERWL3ZzClozMUZ0WXcrRXdxa2JEeC9rYVQ5dXpmK0xKZGxrZjE0blFRajhFa3kvOGQzbVdKYmIvOXRqT2JzYVFnSjVMTHgKQ1lkSW1rcjc3WDJMTXVEdy8xdHBINjQyR0UyNU5yZ202UUhseUtTZllYbzM4djgzZWJFcWJaVURHK1ppb0FyUAptcW1rYXdVV3czZWtoajgwU0pnL1RLOVBSYU4vVnZjSTFQZ0FkN0xaenRVUmVTbVR5NWhkOXI2ck9CeHB4d25UCkR2SGtCbjZ2QWdNQkFBRUNnZ0VBQjI4aTBBWVVOU2IxSm5XRmJLenJ1VWN0dTN0Q05Yb3ZKZzZLM0JpUFZNa3EKRFQxWHJKSWdGNVJISE9scjNPc0xFNnU3WHoyY3RkTUw2UHNoaUtUdEl3dEdwaXZnUnBDaUpFc2xtcjJ6aThBVwo4ZUplcVJMWkVmc1NTSk9YVEc3UmRHc240cUhGSjAwczJaVGxjSUhTUHduRm0rWGpKaTk5VThHNFhzVW9YbzByCkd5KzBWQ3VVN004Z0lDRUhIc3JRTzlYREQzblQyaml1NVRqckt3anV0M0Vtb0pzc0k1YnF4MzMrT0J1NUJwQ1AKQ1Q0NzNENDNQOXAzcWkvWG5mdnFHU0cyT2o0T2FqVjRmcjBvOUIzS3ZJeGtNZW03V2xJM2p5eTFrQXB5WHFWVApiTGtMRnlXQk5UV1VaMlIvMnd4bXVvQzZtTFp3ODc5TUxDS012azFkb1FLQmdRRGhtd0dhZkpOeW1UaUVRWlJJClNzUXg0c2VxZk9LZmdGQzdvaHFIOWNST091OElKMW83cTJwTTJXNFhpVitTM3dUZFBHbWNhNklPalgyM2lzVkIKMnVxTmk5UzRNbkkyL2QyMkdkL0JSOXJ2QncxZUdKb0ticld4MjJmRThRQ0VXVDFBbk8rRHVEMGpDODV5UmxzNwpheHpsYU1yeEV1M0xJOVVFN050cmRRaUJ5UUtCZ1FEVmRJNmNlSVZCVDZSZ3ZWR3Q4emtMalBJRmpoUUVIQUlwCnVoaXJncXBTNkNYOUJseWYyK280MHptZmozaGU1ckNjRW9CNU1zZU0rRGdGYmNWaDJlL01WbllpTk53NkpDREIKQlFrRjQwOHBacFNlS1h2TC9veVYva0ltTVRKL3RVRFkwRVh4TXdTUEpCMFdsdGJXcmVWSUhvcGlnWFJDYmFleQp1QkhWQnYvNHR3S0JnSHdIdWVQeTVTVTFzMnFTbXpEN1djMkxQZll1M25DT0hOUnJGR2IyNk11UmZ1UmVyaTdyCjJHOFRnb0VTRnljcDBRVElOOCsxSk0wWFlLeE5jSkQ2QjhWMXdLYmJwUXN5bW5lSTFnanV0aUIvSWd3L1BrREsKQ0w0VlA0RjRkYTVOV1cxeVdnTnlnTG9KdlovNXFpS0tpc0pjMEdXazRIS3o2bUxnek9qUTJMSnhBb0dCQUxIWgpmTjJZZVlieVljYU0xMXAxVmlsdWxWVFZqWTNpL0ZaaURSNFNML0lHSldqTi9Temc0aVhZc0tGbXUrZHVsT1psCmNCQUxwRUtycXBtelhZdHJONmJzdjE4KzVlTzNxR2JLMkRyRXEzZVdWZXYyS29UTW9ieHo3ZysrWEJJV0ptTEEKSGhhYTZJaVBrWUQ1eXlWeUhLRGJlWGdiM285ZXFDUjd3N2ZZTGp5L0FvR0FJNEQrTUZraXZ3VUY3aHFmNWVkUwpLcmx0d21vZEhpcVhOYlZrd2JXMUFGUEpiaVlhaTRZRmZLNElBYmlmL1lteGY5Rzc4YU9rcjlacENJek9rRFBaCllwRXdRR1dzQWhFbENGdmM4RS81ZEhFU1NwK3RXdFArTmx1aW1wRnFpRGczL1NVbk13TzJ4SDBuaExhMHplamgKZ21MaDR3L0NjUHliOVp5WGNlV1UvblU9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"
                    },
                    {
                      "name": "COOKIE_SECRET",
                      "value": "UYgnt8bxxK5G2sFaNzyqi5Z+OgF8m2akNc0xdQx718w="
                    },
                    {
                      "name": "DATABROKER_STORAGE_CONNECTION_STRING",
                      "value": "redis://redis:6379"
                    },
                    {
                      "name": "DATABROKER_STORAGE_TYPE",
                      "value": "redis"
                    },
                    {
                      "name": "IDP_CLIENT_ID",
                      "value": "CLIENT_ID"
                    },
                    {
                      "name": "IDP_CLIENT_SECRET",
                      "value": "CLIENT_SECRET"
                    },
                    {
                      "name": "IDP_PROVIDER",
                      "value": "github"
                    },
                    {
                      "name": "IDP_PROVIDER_URL",
                      "value": "https://mock-idp.localhost.pomerium.io"
                    },
                    {
                      "name": "LOG_LEVEL",
                      "value": "info"
                    },
                    {
                      "name": "POLICY",
                      "value": ""
                    },
                    {
                      "name": "SHARED_SECRET",
                      "value": "UYgnt8bxxK5G2sFaNzyqi5Z+OgF8m2akNc0xdQx718w="
                    },
                    {
                      "name": "SIGNING_KEY",
                      "value": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBSR1d3TGg3NW5OWG5razM3ekRmTjhvbkx3ZkNpYUxQVEQrbmM4THg1aGNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFa3BCa08wVEttaDRKZFFmTE9lZU1kNTNLbmdhMVdkUVhyNUZjZXBrK2RMVktkVkt4WENHcQpoMW9qdWh1VzExR0lvT3pTOUdvU0tsTlZTUkZXVkVXRHZ3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                    },
                    {
                      "name": "SIGNING_KEY_ALGORITHM",
                      "value": "ES256"
                    }
                  ],
                  "image": "pomerium/pomerium:${POMERIUM_TAG:-master}",
                  "name": "pomerium",
                  "ports": [
                    {
                      "containerPort": 80,
                      "name": "http"
                    },
                    {
                      "containerPort": 443,
                      "name": "https"
                    },
                    {
                      "containerPort": 5443,
                      "name": "grpc"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "v1",
        "kind": "Service",
        "metadata": {
          "labels": {
            "app": "redis"
          },
          "name": "redis",
          "namespace": "default"
        },
        "spec": {
          "ports": [
            {
              "name": "tcp",
              "port": 6379,
              "targetPort": "tcp"
            }
          ],
          "selector": {
            "app": "redis"
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "metadata": {
          "name": "redis",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app": "redis"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "app": "redis"
              }
            },
            "spec": {
              "containers": [
                {
                  "image": "redis:6.2.5-alpine",
                  "name": "redis",
                  "ports": [
                    {
                      "containerPort": 6379,
                      "name": "tcp"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "v1",
        "kind": "Service",
        "metadata": {
          "labels": {
            "app": "verify"
          },
          "name": "verify",
          "namespace": "default"
        },
        "spec": {
          "ports": [
            {
              "name": "http",
              "port": 80,
              "targetPort": "http"
            }
          ],
          "selector": {
            "app": "verify"
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "metadata": {
          "name": "verify",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app": "verify"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "app": "verify"
              }
            },
            "spec": {
              "containers": [
                {
                  "image": "pomerium/verify:${VERIFY_TAG:-latest}",
                  "name": "verify",
                  "ports": [
                    {
                      "containerPort": 80,
                      "name": "http"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "v1",
        "kind": "Service",
        "metadata": {
          "labels": {
            "app": "websocket-echo"
          },
          "name": "websocket-echo",
          "namespace": "default"
        },
        "spec": {
          "ports": [
            {
              "name": "http",
              "port": 80,
              "targetPort": "http"
            }
          ],
          "selector": {
            "app": "websocket-echo"
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json

      cat <<-EOF | tee /tmp/manifest.json
      {
        "apiVersion": "apps/v1",
        "kind": "Deployment",
        "metadata": {
          "name": "websocket-echo",
          "namespace": "default"
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "app": "websocket-echo"
            }
          },
          "template": {
            "metadata": {
              "labels": {
                "app": "websocket-echo"
              }
            },
            "spec": {
              "containers": [
                {
                  "args": [
                    "--port",
                    "80",
                    "tee"
                  ],
                  "image": "pvtmert/websocketd:latest",
                  "name": "websocket-echo",
                  "ports": [
                    {
                      "containerPort": 80,
                      "name": "http"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
      EOF
      kubectl apply -f /tmp/manifest.json
    image: rancher/k3s:${K3S_TAG:-latest}
    volumes:
    - k3s-config:/k3s-config
  k3s-server:
    command:
    - server
    - --disable
    - traefik
    - --disable
    - metrics-server
    - --kube-apiserver-arg
    - service-node-port-range=1-65535
    environment:
      K3S_KUBECONFIG_MODE: "666"
      K3S_KUBECONFIG_OUTPUT: /k3s-config/kubeconfig.yaml
      K3S_TOKEN: TOKEN
    healthcheck:
      test:
      - CMD
      - kubectl
      - cluster-info
    image: rancher/k3s:${K3S_TAG:-latest}
    ports:
    - 6443:6443/tcp
    - 5443:5443/tcp
    - 443:443/tcp
    - 80:80/tcp
    privileged: true
    restart: always
    tmpfs:
    - /run
    - /var/run
    ulimits:
      nofile:
        hard: 65535
        soft: 65535
      nproc: 65535
    volumes:
    - k3s-config:/k3s-config
volumes:
  k3s-config:
    driver_opts:
      device: /tmp
      o: bind
      type: none
